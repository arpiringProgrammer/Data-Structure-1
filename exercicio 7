/*
 Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.

*/

arquivo.c:

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"
#define HUNDRED 100

/*
 Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.
*/

typedef information* info;

static void takeOffEnter(char string[]) {
    if (string[strlen(string) - 1] == '\n') {
        string[strlen(string) - 1] = '\0';
    }
}


void fillInfo(info i) {
    printf("\ninform the name of the user:\n");
    setvbuf(stdin, NULL, _IONBF, 0);
    fgets(i->name, HUNDRED, stdin);
    takeOffEnter(i->name);
    setvbuf(stdin, NULL, _IONBF, 0);
    printf("\ninform the day you were born:\n");
    scanf("%d",&i->day);
    printf("\ninform the month you were born:\n");
    scanf("%d", &i->month);
    printf("\ninform the year you were born:\n");
    scanf("%d", &i->year);
    printf("\ninform your CPF:\n");
    scanf("%d", &i->cpf);
}

void printInfo(info i) {
    printf("\nname of the user:%s\n",i->name);
    printf("\nday your were born:%d\n",i->day);
    printf("\nmonth you were born:%d\n", i->month);
    printf("\nyear you were born:%d\n",i->year);
    printf("\nyour cpf:%d\n",i->cpf);
}


arquivo.h:

#ifndef INCLUDED_H_FAILED
#define INCLUDED_H_FAILED
#define HUNDRED 100

typedef struct information{
    char name[HUNDRED];
    int day;
    int month;
    int year;
    int cpf;
}information;

typedef information* info;

static void TakeOffEnter(char*);

void fillInfo(info);

void printInfo(info);

#endif // INCLUDED_H_FAILED


main.c:


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"


int main() {

	info user = (info)malloc(sizeof(information));
	if (!user) {
		printf("erro ao alocar memoria.\n");
		return 1;
	}

	fillInfo(user);
	printInfo(user);

	free(user);

	return 0;
}

