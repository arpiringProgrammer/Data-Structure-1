Passagem por referência:

Main.c:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"

/*
) Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.
Idem a questão acima, mas construa as funções usando referências (&).
*/


int main() {

	information* info = (information*)malloc(sizeof(information));

	if (!info) {
		printf("an error ocurried while trying to open a file!!\n");
		return 1;
	}

	fillVector(&info);

	printVector(&info);

	free(info);

	return 0;
}

arquivo.c:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"
#define HUNDRED 100


/*
) Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.
Idem a questão acima, mas construa as funções usando referências (&).
*/



static void takeOffEnter(char string[]) {
	if (string[strlen(string) - 1] == '\n') {
		string[strlen(string) - 1] = '\0';
	}
}

void fillVector(information* info) {
	printf("\ninform your name:\n");
	setvbuf(stdin, NULL, _IONBF, 0);
	fgets(info->name, HUNDRED, stdin);
	setvbuf(stdin, NULL, _IONBF, 0);
	takeOffEnter(info->name);
	printf("\ninform the day you were born:\n");
	scanf("%d", &info->day);
	printf("\ninform the month you were born:\n");
	scanf("%d", &info->month);
	printf("\ninform the year you were born:\n");
	scanf("%d", &info->year);
	printf("\ninform your CPF:\n");
	scanf("%d", &info->cpf);
}

void printVector(information* info) {
	printf("\nname:%s\n", info->name);
	printf("\nday you were born:%d\n",info->day);
	printf("\nmonth you were born:%d\n", info->month);
	printf("\nyear you were born:%d\n", info->year);
	printf("\nyour CPF:%d\n", info->cpf);
}
Arquivo.h:
#ifndef INCLUDED_H_FAILED
#define INCLUDED_H_FAILED
#define HUNDRED 100

typedef struct {
	char name[HUNDRED];
	int day;
	int month;
	int year;
	int cpf;
}information;

static void takeOffEnter(char*);

void fillVector(information*);

void printVector(information*);


#endif // INCLUDED_H_FAILED

Passagem sem referência:

Main.c:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"

/*
) Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.
Idem a questão acima, mas construa as funções usando referências (&).
*/


int main() {

	information info;

	fillVector(info);

	printVector(info);

	return 0;
}

arquivo.c:
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "Failed.h"
#define HUNDRED 100


/*
) Criar uma estrutura , contendo nome, data de nascimento e CPF. Crie uma variável que é um
ponteiro para esta estrutura (no programa principal). Depois crie uma função que receba este
ponteiro e preencha os dados da estrutura e também uma uma função que receba este ponteiro e
imprima os dados da estrutura. Finalmente, faça a chamada a esta função na função principal.
Idem a questão acima, mas construa as funções usando referências (&).
*/



static void takeOffEnter(char string[]) {
	if (string[strlen(string) - 1] == '\n') {
		string[strlen(string) - 1] = '\0';
	}
}

void fillVector(information info) {
	printf("\ninform your name:\n");
	setvbuf(stdin, NULL, _IONBF, 0);
	fgets(info.name, HUNDRED, stdin);
	setvbuf(stdin, NULL, _IONBF, 0);
	takeOffEnter(info.name);
	printf("\ninform the day you were born:\n");
	scanf("%d", &info.day);
	printf("\ninform the month you were born:\n");
	scanf("%d", &info.month);
	printf("\ninform the year you were born:\n");
	scanf("%d", &info.year);
	printf("\ninform your CPF:\n");
	scanf("%d", &info.cpf);
}

void printVector(information info) {
	printf("\nname:%s\n", info.name);
	printf("\nday you were born:%d\n",info.day);
	printf("\nmonth you were born:%d\n", info.month);
	printf("\nyear you were born:%d\n", info.year);
	printf("\nyour CPF:%d\n", info.cpf);
}

arquivo.h:
#ifndef INCLUDED_H_FAILED
#define INCLUDED_H_FAILED
#define HUNDRED 100

typedef struct {
	char name[HUNDRED];
	int day;
	int month;
	int year;
	int cpf;
}information;

static void takeOffEnter(char*);

void fillVector(information);

void printVector(information);


#endif // INCLUDED_H_FAILED
